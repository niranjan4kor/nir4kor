# Copyright (c) 2022 Robert Bosch GmbH and Microsoft Corporation
#
# This program and the accompanying materials are made available under the
# terms of the Apache License, Version 2.0 which is available at
# https://www.apache.org/licenses/LICENSE-2.0.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# SPDX-License-Identifier: Apache-2.0

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{.Values.otelCollector.name}}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: otelcol-sdv
data:
  relay: |
    exporters:
      file/containerlogs:
        path: /data/otel-container-logs.json  
    processors:
      batch:
        send_batch_size: 1600
        timeout: 30s
    receivers:
      filelog:
        exclude: []
        include:
        - /var/log/pods/default_*/seatadjuster/*.log
        include_file_name: false
        include_file_path: true
        start_at: beginning
        operators:
        - type: regex_parser
          id: parser-containerd
          parse_to: body
          output: extract_metadata_from_filepath
          regex: '^(?P<time>[^\+^-^ ^Z]*(Z|[\+-]\d{2}:\d{2})?) (?P<stream>stdout|stderr) (?P<logtag>[^ ]*) ?(?P<log>.*)$'
          timestamp:
            layout_type: gotime
            layout: '2006-01-02T15:04:05.999Z07:00'
            parse_from: body.time
        - type: regex_parser
          id: extract_metadata_from_filepath
          parse_from: attributes["log.file.path"]
          parse_to: body
          regex: '^.*\/(?P<namespace>[^_]+)_(?P<pod_name>[^_]+)_(?P<uid>[a-f0-9\-]+)\/(?P<container_name>[^\._]+)\/(?P<run_id>\d+)\.log$'
        - type: move
          from: body.container_name
          to: resource["k8s.container.name"]
        - type: move
          from: body.namespace
          to: resource["k8s.namespace.name"]    
        - type: move
          from: body.pod_name
          to: resource["k8s.pod.name"]
        - type: move
          from: body.uid
          to: resource["k8s.pod.uid"]
        - type: regex_parser
          id: parser-app-logs-feedercan
          if: 'resource["k8s.container.name"] == "feedercan"'
          parse_to: body
          parse_from: body.log
          regex: '^(?P<time>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2},\d{3}) (?P<severity>[A-Z]*) (?P<component>[a-zA-Z]*): (?P<log>.*)'
          timestamp:
            parse_from: body.time
            layout: '%Y-%m-%d %H:%M:%S.%L'
          severity:
            parse_from: body.severity
            mapping:
              error: 'ERROR'
              warn: 'WARNING'
              info: 'INFO'
              debug: 'DEBUG'
              trace: 'TRACE'
        - type: move
          from: attributes["log.file.path"]
          to: body["log.file.path"]
        - type: move
          id: clean-up-log-body
          from: body.log
          to: body
    service:
      telemetry:
        logs:
          level: "debug"
      pipelines:
        logs/containers:
          exporters:
          - file/containerlogs
          processors:
          - batch
          receivers:
          - filelog
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: otelcol-sdv-agent
spec:
  selector:
    matchLabels:
      component: otelcol-sdv-agent
  template:
    metadata:
      labels:
        component: otelcol-sdv-agent
    spec:
      serviceAccountName: otelcol-sdv
      securityContext:
        {}
      containers:
        - name: otelcol-sdv-agent
          command:
            - /otelcol-sdv
            - --config=/conf/relay.yaml
          securityContext:
            {}
          image: k3d-devregistry.localhost:12345/otelcol-sdv-ext:latest
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - mountPath: /conf
              name: otelcol-sdv-configmap
            - name: varlogpods
              mountPath: /var/log/pods
              readOnly: true
            - name: varlibdockercontainers
              mountPath: /var/lib/docker/containers
              readOnly: true
            - mountPath: "/data"
              name: pv-storage
      volumes:
        - name: otelcol-sdv-configmap
          configMap:
            name: otelcol-sdv
            items:
              - key: relay
                path: relay.yaml
        - name: varlogpods
          hostPath:
            path: /var/log/pods
        - name: varlibdockercontainers
          hostPath:
            path: /var/lib/docker/containers
        - name: pv-storage
          persistentVolumeClaim:
            claimName: pv-claim
      hostNetwork: false          
      imagePullSecrets:
        - name: ghcr-io
